<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.dissolution</groupId>
	<artifactId>my-custom-share</artifactId>
	<version>1.0-SNAPSHOT</version>
	<name>Alfresco Share client</name>
	<packaging>war</packaging>
	<description>SHARE customization meant to be the main Alfresco UI, which enables collaboration and easy ReST based remotable customization.</description>

	<repositories>
		<repository>
			<id>alfresco-public</id>
			<url>http://maven.alfresco.com/nexus/content/groups/public</url>
		</repository>
		<repository>
            <id>alfresco-public-snapshots</id>
            <url>http://maven.alfresco.com/nexus/content/groups/public-snapshots</url>
        </repository>
        <repository>
            <id>alfresco-maven-repo</id>
            <url>http://maven.alfresco.com/nexus/content/repository/enterprise-snapshots</url>
            <snapshots>
                <enabled>true</enabled>
           </snapshots>
           
           
        </repository>
        

        
        
	</repositories>

  <!-- Configuration point for the build time properties -->
	<properties>
		<env>local</env>
		<alfresco.version>4.0.b</alfresco.version>
        <alfresco.edition>community</alfresco.edition>
		<share.log.level>info</share.log.level>
		<share.servlet.port>8081</share.servlet.port>
        <surf.wiring.mode>development</surf.wiring.mode><!-- "production" is the other allowed value -->
	</properties>

	<!-- Alfresco dependencies -->
	<dependencies>
		<!--
			Alfresco Dependencies. Use this dependency to switch SHARE version
		-->
		<dependency>
			<groupId>org.alfresco</groupId>
			<artifactId>share</artifactId>
			<type>war</type>
			<version>${alfresco.version}</version>
			<classifier>${alfresco.edition}</classifier>
		</dependency>
        <!-- Share module dependencies 
            | As of Alfresco 3.3 you can add here below Share Dashlets/Pages packaged as Jars (see http://blogs.alfresco.com/wp/kevinr/2010/01/28/alfresco-share-33-extensions-and-springsurf/)
            | You can build them with Maven using the Maven Share Module Archetype, documentation can be found here: http://wiki.alfresco.com/wiki/Managing_Alfresco_Lifecyle_with_Maven)
         -->     
        <dependency>
            <groupId>com.dissolution</groupId>
            <artifactId>my-custom-share-module</artifactId>
            <type>jar</type>
            <version>1.0-SNAPSHOT</version>
        </dependency>
       
	</dependencies>

	<build>
    <!-- Runtime properties file which is used to configure your Share instance. It's multi-environment aware (-Denv=yourEnv) -->
		<filters>
			<filter>${project.basedir}/src/main/properties/${env}/application.properties</filter>
		</filters>

		<!--
			Default profile to build as an Alfresco extension - resources are
			copied into classpath
		-->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<!--
				| Include application properties file in classpath: this allows
				Spring contexts to have customization properties available at |
				classpath:alfresco/extension/application.properties
			-->
			<resource>
				<directory>src/main/properties/${env}</directory>
				<includes>
					<include>application.properties</include>
				</includes>
				<!--
					This gets loaded to be the filter for spring runtime placeholding,
					so no need for build time filtering
				-->
				<targetPath>alfresco/web-extension</targetPath>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<archiveClasses>false</archiveClasses>
					<filters>
						<filter>${project.basedir}/src/main/properties/${env}/application.properties</filter>
					</filters>
					<webResources></webResources>
				</configuration>
			</plugin>
             <!-- Needed for cross OS compatibility in acp/zip encoding -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <!-- By default as per http://code.google.com/p/maven-alfresco-archetypes/issues/detail?id=7 FTL are not filtered to avoid corruption.
                        | This behavior can be relaxed (in case filtering is needed in the FTLs) by selecting which files are filtered and which not as described 
                        | here http://code.google.com/p/maven-alfresco-archetypes/issues/detail?id=7#c3
                        -->
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>ftl</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
		</plugins>
	</build>
	
	<!-- Custom behaviors -->
	<profiles>
	  <!-- Invoke this with -Prun to run embedded jetty during your build -->
		<profile>
			<id>run</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>maven-jetty-plugin</artifactId>
                        <version>6.1.21</version>
						<configuration>
							<connectors>
								<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
									<port>${share.servlet.port}</port>
								</connector>
							</connectors>
						</configuration>
						<executions>
						  <execution>
						    <id>run-jetty</id>
						    <phase>pre-integration-test</phase>
						    <goals>
						      <goal>run-exploded</goal>
						    </goals>
						  </execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

</project>
